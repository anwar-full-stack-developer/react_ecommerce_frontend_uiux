{"version":3,"sources":["redux/enhancers/monitorReducers.js","redux/middleware/logger.js","constants/productsConstants.js","redux/configureAppStore.js","reducers/productReducer.js","actions/productActions.js","pages/HomePage.js","pages/Blog.js","pages/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["monitorReducerEnhancer","createStore","reducer","initialState","enhancer","state","action","number","start","performance","now","newState","end","diff","Math","round","console","log","logger","store","next","group","type","info","result","getState","groupEnd","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","rootReducer","combineReducers","example","productList","products","loading","payload","error","listProducts","dispatch","a","axios","get","data","message","HomePage","useDispatch","useSelector","useEffect","preloadedState","Blog","React","Component","Contact","props","counter","actions","bindActionCreators","productActions","handleClick","bind","this","setState","onClick","oCounter","connect","oCounterSource","event","configureStore","middleware","getDefaultMiddleware","concat","loggerMiddleware","thunkMiddleware","devTools","process","enhancers","monitorReducersEnhancer","App","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","env","REACT_APP_API_BASE_URL","defaults","baseURL","headers","common","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e48c4aa9.chunk.js","sourcesContent":["\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nconst round = number => Math.round(number * 100) / 100\r\n\r\nconst monitorReducerEnhancer = createStore => (reducer, initialState, enhancer) => {\r\n    const monitoredReducer = (state, action) => {\r\n      const start = performance.now()\r\n      const newState = reducer(state, action)\r\n      const end = performance.now()\r\n      const diff = round(end - start)\r\n\r\n      console.log('reducer process time:', diff)\r\n\r\n      return newState\r\n    }\r\n\r\n    return createStore(monitoredReducer, initialState, enhancer)\r\n  }\r\n\r\nexport default monitorReducerEnhancer","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n  }\r\n  \r\n  export default logger","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport monitorReducersEnhancer from \"./enhancers/monitorReducers\";\r\nimport loggerMiddleware from \"./middleware/logger\";\r\n// import rootReducer from './reducers'\r\n\r\n\r\nimport { productListReducer } from \"../reducers/productReducer\";\r\nconst initialState = {};\r\nconst rootReducer = combineReducers({\r\n  example: () => [],\r\n  productList: productListReducer\r\n  // products: () => [\r\n  //   {id: 10, name: \"iPhone 13\", price: 1000},\r\n  //   {id: 11, name: \"Samsung A30\", price: 500},\r\n  //   {id: 12, name: \"Mortola M2\", price: 300},\r\n  //   {id: 13, name: \"Symphony Wz\", price: 200}\r\n  // ]\r\n});\r\n\r\n// export default function configureStore(preloadedState) {\r\n//   const middlewares = [loggerMiddleware, thunkMiddleware]\r\n//   const middlewareEnhancer = applyMiddleware(...middlewares)\r\n\r\n//   const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\r\n//   const composedEnhancers = compose(...enhancers)\r\n\r\n//   const store = createStore(rootReducer, preloadedState, composedEnhancers)\r\n\r\n//   return store\r\n// }\r\n\r\nexport default function configureAppStore(preloadedState) {\r\n  const store = configureStore({\r\n    initialState: initialState,\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware().concat(loggerMiddleware).concat(thunkMiddleware),\r\n    devTools: process.env.NODE_ENV !== \"production\",\r\n    preloadedState,\r\n    enhancers: [monitorReducersEnhancer],\r\n  });\r\n\r\n  if (process.env.NODE_ENV !== \"production\" && module.hot) {\r\n    module.hot.accept(\"./reducers\", () => store.replaceReducer(rootReducer));\r\n  }\r\n\r\n  return store;\r\n}\r\n","import { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productsConstants\";\r\n\r\nexport const productListReducer = (state = {products: []}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true};\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading: false, products: action.payload};\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from \"axios\";\r\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productsConstants\";\r\n\r\nconst dummyProducts = [\r\n    {id: 10, name: \"iPhone 13\", price: 1000},\r\n    {id: 11, name: \"Samsung A30\", price: 500},\r\n    {id: 12, name: \"Mortola M2\", price: 300},\r\n    {id: 13, name: \"Symphony Wz\", price: 200}\r\n  ];\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    dispatch({\r\n        type: PRODUCT_LIST_REQUEST\r\n    })\r\n    try {\r\n        const {data} = await axios.get('api/products');\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n            // payload: dummyProducts\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.message\r\n            // payload: dummyProducts\r\n        });\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {listProducts} from \"./../actions/productActions\";\r\nexport default function HomePage() {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\nconsole.log(productList);\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return <h1>Home</h1>;\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nclass Blog extends React.Component {\r\n    render (){\r\n\r\n        return <h1>Blog page</h1>;\r\n    }\r\n  };\r\n  \r\n  export default Blog;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as productActions from \"./../actions/productActions\";\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { dispatch } = props;\r\n    console.log(\"contact us page\");\r\n    this.state = {\r\n      counter: 10,\r\n      productList: [],\r\n    };\r\n    console.log(\"props \", props);\r\n    //bind actions from outside [it works]\r\n    this.actions = bindActionCreators(productActions, dispatch);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() {\r\n    let counter = this.state.counter + 1;\r\n    this.setState({ counter });\r\n    // this.state.counter = this.state.counter++;\r\n  }\r\n  async componentDidMount() {\r\n    this.setState({ counter: 11 });\r\n    try {\r\n      const products = await this.props.listProducts();\r\n      this.setState({ productList: products });\r\n    } catch (exception) {}\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Contact page</h1>\r\n        <button onClick={this.handleClick}>\r\n          Add counter : {this.state.counter}\r\n        </button>\r\n        <h4>props oCounter: {this.props.oCounter}</h4>\r\n        <h5>listProducts {this.state.productList}</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//pass state or initial state from outside to connect with component\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    oCounter: 200,\r\n    oCounterSource: \"outside\",\r\n  };\r\n};\r\n\r\n//pass dispatch from outside to connect with component\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    listProducts: (event) => dispatch(productActions.listProducts()),\r\n  };\r\n};\r\n// export default Contact;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\r\n","import env from './config/env.json'\nimport React, { useEffect } from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap';\n\nimport configureAppStore from './redux/configureAppStore'\n\n\nimport './App.css';\nimport HomePage from \"./pages/HomePage\";\nimport Blog from \"./pages/Blog\";\nimport Contact from \"./pages/Contact\";\n\nconst store = configureAppStore();\n\n\nfunction App() {\n  \n  useEffect(() => {\n    \n  }, [])\n  return (\n    <Provider store={store}>\n    <Router>\n      <div>\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div>\n        <Link to=\"/blog\">Blog Articles</Link>\n      </div>\n      <div>\n        <Link to=\"/contact\">Contact Me</Link>\n      </div>\n\n      <hr />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route path=\"/blog\">\n          <Blog />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n      </Switch>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import env from './config/env.json'\nimport dotenv from 'dotenv';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconsole.log(env, env.REACT_APP_API_BASE_URL);\naxios.defaults.baseURL = env.REACT_APP_API_BASE_URL;\n// axios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n// axios.defaults.headers.post['Content-Type'] = 'application/json';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}